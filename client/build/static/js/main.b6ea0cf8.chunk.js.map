{"version":3,"sources":["img/pokeball.png","utils/constants.js","img/Charizard.png","components/LandingPage/LandingPage.js","actions/index.js","components/Pokemon/Pokemon.js","components/Loading/Loading.js","components/Error/Error.js","components/Home/Home.js","components/Paginate/Paginate.js","components/AddPokemon/AddForm.js","controllers/Validate.js","components/AddPokemon/AddPokemon.js","components/NavBar/Navbar.js","controllers/Pokemons.js","components/Detail/Detail.js","components/Filter/Filter.js","App.js","reportWebVitals.js","controllers/Views.js","reducers/index.js","store/index.js","index.js"],"names":["POKEMON_URL","FORMS","label","name","FILTER_VALUES","SORT_VALUES","MODE_VALUES","POKEBALL_IMAGE","pokeball","ARROW_ICON","Login","className","src","Charizard","alt","exact","to","GET_POKEMONS","SET_POKEMONS_TYPES","CREATE_NEW_POKEMON","CHANGE_PAGE","SEARCH_POKEMON","RELOAD_POKEMONS","SET_LOADING","FILTER_POKEMONS","ERROR","getPokemons","dispatch","a","axios","get","then","response","type","payload","data","reloadPokemons","Pokemon","id","image","types","color","map","join","index","Loading","Error","error","connect","state","actualPage","pokemonsViews","searchView","loading","setPokemonsTypes","res","Promise","all","results","post","AddType","PokemonsTypes","useEffect","pokemons","search","length","pokemon","Types","changePage","num","page","useState","maxPage","setMaxPage","onClick","parseInt","value","e","target","handleClick","AddForm","handleSubmit","handleChange","handleTypes","forms","pokemonsTypes","Errors","Alert","models","onSubmit","create","class","el","i","errors","autoComplete","onChange","Validate","reg","hp","attack","defense","speed","height","weight","createNewPokemon","Data","setData","setErrors","setTypes","setAlert","Object","keys","preventDefault","console","log","includes","searchPokemon","sprites","front_default","stats","base_stat","setLoading","setName","placeholder","getPokemonDetail","detail","Detail","props","setDetail","match","params","filterPokemons","dataType","sort","mode","s","m","App","Fragment","path","component","LandingPage","Navbar","Filter","Home","Paginate","AddPokemon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaultTypes","setViews","views","view","regExp","array","push","filter","check","forEach","pokeType","APP","API","poke","test","sortedArray","sortArray","amount","compare","model","b","initialState","pokemonsLoaded","searchName","pokemonDetail","reducer","filteredViews","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6ea0cf8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokeball.ec4618a5.png\";","import pokeball from '../img/pokeball.png'\r\nexport const POKEMON_URL = 'http://159.203.183.30/api/pokemons';\r\nexport const POKEMON_TYPES = 'http://159.203.183.30/api/types';\r\nexport const POKEMON_TYPES_API = 'https://pokeapi.co/api/v2/type';\r\nexport const POKEMON_NAME = 'http://159.203.183.30/api/pokemons?name=';\r\nexport const DEFAULT_IMAGE = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/shiny/150.png';\r\nexport const BACKGROUND_IMAGE = 'https://static.wikia.nocookie.net/ssbb/images/2/21/Charizard_SSBU.png/revision/latest/scale-to-width-down/1000?cb=20180614230743&path-prefix=es';\r\n\r\n\r\nexport const FORMS = [\r\n    { label: '💬Name', name: 'name' },\r\n    { label: '❤️HP', name: 'hp' },\r\n    { label: '💪Attack', name: 'attack' },\r\n    { label: '🛡️Defense', name: 'defense' },\r\n    { label: '💨Speed', name: 'speed' },\r\n    { label: '📏Height', name: 'height' },\r\n    { label: '⚖️Weight', name: 'weight' },\r\n];\r\n\r\nexport const FILTER_VALUES = ['ALL', 'API', 'APP'];\r\nexport const SORT_VALUES = ['DEFAULT', 'NAME', 'ATTACK'];\r\nexport const MODE_VALUES = ['DEFAULT', 'ASCENDENT', 'DESCENDENT'];\r\n\r\nexport const POKEBALL_IMAGE = pokeball;\r\nexport const SEARCH_ICON = 'https://cdn0.iconfinder.com/data/icons/very-basic-2-android-l-lollipop-icon-pack/24/search-512.png'\r\nexport const ARROW_ICON = 'https://www.braindw.com/wp-content/uploads/2018/04/arrow-icon-28.png'\r\nexport const POKEMON_LOGO = 'https://images.wikidexcdn.net/mwuploads/esssbwiki/7/77/latest/20111028181540/TituloUniversoPok%C3%A9mon.png'","export default __webpack_public_path__ + \"static/media/Charizard.245d0e4e.png\";","import React from 'react';\r\nimport './LandingPage.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { POKEBALL_IMAGE } from '../../utils/constants'\r\nimport Charizard from '../../img/Charizard.png'\r\n\r\nexport default function Login() {\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className='background'>\r\n                <img className='Charizard invert' src={Charizard} alt='background'></img>\r\n                <img className='Charizard' src={Charizard} alt='background'></img>\r\n            </div>\r\n            <div className='login-pokeball'>\r\n                <img className=\"pokeball login\" src={POKEBALL_IMAGE}/>\r\n            </div>\r\n            <div className=\"login\">\r\n                <NavLink exact to={\"/home\"} className=\"link\"><span className=\"button\">ENTER</span></NavLink>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import { POKEMON_URL, POKEMON_TYPES, POKEMON_TYPES_API, POKEMON_NAME } from '../utils/constants'\r\nimport axios from 'axios';\r\n\r\nexport const GET_POKEMONS = 'GET_POKEMONS';\r\nexport const SET_POKEMONS_TYPES = 'SET_POKEMONS_TYPES';\r\nexport const CREATE_NEW_POKEMON = 'CREATE_NEW_POKEMON';\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\r\nexport const SEARCH_POKEMON = 'SEARCH_POKEMON';\r\nexport const RELOAD_POKEMONS = 'RELOAD_POKEMONS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const FILTER_POKEMONS = 'FILTER_POKEMONS';\r\nexport const ERROR = 'ERROR';\r\n\r\nexport function getPokemons() {\r\n    return async function (dispatch) {\r\n        return await axios.get(POKEMON_URL)\r\n            .then(response => {\r\n                dispatch({ type: GET_POKEMONS, payload: response.data })\r\n            })\r\n    }\r\n}\r\n\r\nexport function changePage(page) {\r\n    return function (dispatch) {\r\n        dispatch({ type: CHANGE_PAGE, payload: page })\r\n    }\r\n}\r\n\r\nexport function setPokemonsTypes() {\r\n    return async function (dispatch) {\r\n        const res = await axios.get(POKEMON_TYPES_API);\r\n        const PokemonsTypes = await Promise.all(res.data.results.map(async (type) => {\r\n            const AddType = await axios.post(POKEMON_TYPES, { name: type.name })\r\n            return AddType.data;\r\n        }))\r\n        dispatch({ type: SET_POKEMONS_TYPES, payload: PokemonsTypes })\r\n    }\r\n}\r\n\r\nexport function createNewPokemon(data) {\r\n    return async function (dispatch) {\r\n        const res = await axios.post(POKEMON_URL, data);\r\n        dispatch({ type: CREATE_NEW_POKEMON, payload: res })\r\n    }\r\n}\r\n\r\nexport function searchPokemon(name) {\r\n    return async function (dispatch) {\r\n        try {\r\n            const res = await axios.get(`${POKEMON_URL}/name/${name}`);\r\n            const data = res.data;\r\n            const pokemon = [{\r\n                id: data.id,\r\n                name: data.name,\r\n                image: data.sprites.front_default,\r\n                Types: data.types.map(type => {\r\n                    return { name: type.type.name };\r\n                }),\r\n                hp: data.stats[0].base_stat,\r\n                attack: data.stats[1].base_stat,\r\n                defense: data.stats[2].base_stat,\r\n                speed: data.stats[5].base_stat,\r\n                height: data.height,\r\n                weight: data.weight\r\n            }]\r\n            dispatch({ type: SEARCH_POKEMON, payload: pokemon })\r\n        } catch (error) {\r\n            dispatch({ type: ERROR, payload: 'Pokemon not found' })\r\n        }\r\n    }\r\n}\r\n\r\nexport function setLoading(state) {\r\n    return async function (dispatch) {\r\n        dispatch({ type: SET_LOADING, payload: state })\r\n    }\r\n}\r\n\r\nexport function reloadPokemons() {\r\n    return async function (dispatch) {\r\n        dispatch({ type: RELOAD_POKEMONS })\r\n    }\r\n}\r\n\r\nexport function filterPokemons(data) {\r\n    return async function (dispatch) {\r\n        dispatch({ type: FILTER_POKEMONS, payload: data })\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Pokemon.css';\r\n\r\nexport default function Pokemon({ id, name, image, types }) {\r\n\r\n    const color = types.map(type => {\r\n        return type.name\r\n    }).join(\" \")\r\n\r\n    return (\r\n        <NavLink className=\"link\" exact to={`/home/pokemon/${id}`}>\r\n            <div className={`unset pokemon-container`}>\r\n                <div className='inner-container'>\r\n                    <img className={`pokemon-home-image ${color}`} src={image} alt='loading'></img>\r\n                    <div className='name'>{name}</div>\r\n                    <span>Types: </span>\r\n                    {\r\n                        types && types.map((type, index) => (\r\n                            <span className='type' key={index}>{type.name}</span>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Loading.css'\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className='loading-container'>\r\n            <img className='loading-giff' src='https://media2.giphy.com/media/IQebREsGFRXmo/giphy.gif'></img>\r\n            <div className='loading'>Loading...</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Error.css';\r\n\r\nexport default function Error({ error }) {\r\n    return (\r\n        <div className='loading-container'>\r\n            <img className='error-giff' src='https://33.media.tumblr.com/ad1f890fb89757f40dfd5fde97ea26fc/tumblr_mxwv73ktBI1scncwdo1_500.gif'></img>\r\n            <div className='error-text'>{`We're sorry: ${error}`}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport './Home.css'\r\nimport { getPokemons, reloadPokemons, setPokemonsTypes } from '../../actions';\r\nimport Pokemon from '../Pokemon/Pokemon';\r\nimport Loading from '../Loading/Loading';\r\nimport Error from '../Error/Error';\r\n\r\nexport function Home({ getPokemons, pokemonsViews, setPokemonsTypes, actualPage, loading, searchView, reloadPokemons }) {\r\n\r\n    useEffect(() => {\r\n        reloadPokemons();\r\n        if (loading.pokemons) {\r\n            getPokemons()\r\n        }\r\n    }, [getPokemons, loading.pokemons, reloadPokemons])\r\n\r\n    useEffect(() => {\r\n        if (loading.types) {\r\n            setPokemonsTypes();\r\n        }\r\n    }, [setPokemonsTypes, loading.types])\r\n\r\n    return (\r\n        <div className='home'>\r\n            <div className='pokemon-table'>\r\n                {\r\n                    loading.search ? (\r\n                        loading.error ? (<Error error={loading.error} />) : (\r\n                            searchView.length ? searchView.map((pokemon, index) => (\r\n                                <Pokemon\r\n                                    key={index}\r\n                                    id={pokemon.id}\r\n                                    name={pokemon.name}\r\n                                    image={pokemon.image}\r\n                                    types={pokemon.Types}\r\n                                />\r\n                            )) : (<Loading />)\r\n                        )\r\n                    ) : (\r\n                        loading.pokemons ? (<Loading />) : (\r\n                            loading.error ? (<Error error={loading.error} />) : (\r\n                                pokemonsViews[0].length ? pokemonsViews[actualPage].map((pokemon, index) => (\r\n                                    <Pokemon\r\n                                        key={index}\r\n                                        id={pokemon.id}\r\n                                        name={pokemon.name}\r\n                                        image={pokemon.image}\r\n                                        types={pokemon.Types}\r\n                                    />\r\n                                )) : (<Loading />)\r\n                            )\r\n                        )\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n    return {\r\n        actualPage: state.actualPage,\r\n        pokemonsViews: state.pokemonsViews,\r\n        searchView: state.searchView,\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getPokemons: () => dispatch(getPokemons()),\r\n        setPokemonsTypes: () => dispatch(setPokemonsTypes()),\r\n        reloadPokemons: () => dispatch(reloadPokemons())\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Home);\r\n","import { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { changePage, filterPokemons, getPokemons, reloadPokemons } from '../../actions';\r\nimport { ARROW_ICON } from '../../utils/constants'\r\nimport './Paginate.css';\r\n\r\nexport function Paginate({ pokemonsViews, changePage, actualPage, loading }) {\r\n    const [maxPage, setMaxPage] = useState(0);\r\n\r\n    const handleClick = (e) => {\r\n        changePage(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setMaxPage(pokemonsViews.length - 1)\r\n    }, [pokemonsViews])\r\n\r\n    const previousPage = () => {\r\n        if (actualPage > 0) {\r\n            changePage(parseInt(actualPage) - 1)\r\n        }\r\n    }\r\n\r\n    const nextPage = () => {\r\n        if (actualPage < maxPage) {\r\n            changePage(parseInt(actualPage) + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                < div className={loading.search || !pokemonsViews.length ? 'Pagination-container hidden' : 'Pagination-container'}>\r\n                    <button\r\n                        className='Pag pag-left'\r\n                        onClick={() => previousPage()}\r\n                    ><img alt='loading' className='arrow-left' src={ARROW_ICON} /></button>\r\n                    {\r\n                        loading.pokemons ? (<div className='loading-pagination'>Paging...</div>) :\r\n                            pokemonsViews.map((pokemon, index) => (\r\n                                <button\r\n                                    key={index}\r\n                                    className={parseInt(actualPage) === index ? 'Pag actual' : 'Pag'}\r\n                                    value={index}\r\n                                    onClick={(e) => handleClick(e)}\r\n                                >{index + 1}\r\n                                </button>\r\n                            ))\r\n                    }\r\n                    <button\r\n                        className='Pag pag-right'\r\n                        onClick={() => nextPage()}\r\n                    ><img alt='loading' className='arrow' src={ARROW_ICON} /></button>\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n    return {\r\n        actualPage: state.actualPage,\r\n        pokemonsViews: state.pokemonsViews,\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getPokemons: () => dispatch(getPokemons()),\r\n        changePage: (num) => dispatch(changePage(num))\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Paginate);\r\n","import React from 'react'\r\nimport './AddPokemon.css'\r\nimport { NavLink } from 'react-router-dom'\r\nexport default function AddForm({\r\n    handleSubmit,\r\n    handleChange,\r\n    handleTypes,\r\n    forms,\r\n    pokemonsTypes,\r\n    Types,\r\n    Errors,\r\n    Alert,\r\n    image,\r\n}) {\r\n    const models = ['name', 'hp', 'attack', 'defense', 'speed', 'height', 'weight'];\r\n    return (\r\n        <form className='form-container' onSubmit={e => { handleSubmit(e) }}>\r\n            <div className='form-header'>\r\n                <h1>CREATE A NEW POKEMON</h1>\r\n                <img src={image} alt='loading' />\r\n                {Alert.create ? (\r\n                    <div class=\"modal\">\r\n                        <div className='modal-content'>\r\n                            The Pokemon was created successfully\r\n                        </div>\r\n                        <NavLink to='/home'>\r\n                            <button className='OK'>OK</button>\r\n                        </NavLink>\r\n                    </div>\r\n                ) : null}\r\n                <button className={Alert.create ?'btn-form hidden': 'btn-form'} type='submit'>\r\n                    CREATE\r\n                </button>\r\n            </div>\r\n            <div className='form-content'>\r\n                {forms &&\r\n                    forms.map((el, i) => (\r\n                        <div className='form-input' key={i}>\r\n                            <div key={i}>\r\n                                <label className='label' key={i} >\r\n                                    {el.label}*\r\n                                    {\r\n                                        Alert.errors ? (\r\n                                            <span className='error'>{Errors[models[i]]}</span>\r\n                                        ) : null\r\n                                    }\r\n                                </label>\r\n                            </div>\r\n                            <input\r\n                                className={Alert.errors ? Errors[models[i]] ? 'error-input input' : 'input' : 'input'}\r\n                                key={el.name}\r\n                                name={el.name}\r\n                                type='text'\r\n                                autoComplete='off'\r\n                                onChange={(e) => handleChange(e)}\r\n                            />\r\n                        </div>\r\n                    ))}\r\n                <div className='types-form'>🔥 Types*\r\n                    {\r\n                        Alert.errors ? (\r\n                            <span className='error'>{Errors['type']}</span>\r\n                        ) : null\r\n                    }\r\n                </div>\r\n                <div className='types-container'>\r\n                    <select onChange={(e) => handleTypes(e)}>\r\n                        {pokemonsTypes &&\r\n                            pokemonsTypes.map((type, i) => (\r\n                                <option key={i} value={type.name}>\r\n                                    {type.name}\r\n                                </option>\r\n                            ))}\r\n                    </select>\r\n                    {Types &&\r\n                        Types.map((el, i) => (\r\n                            <span key={i}>\r\n                                <label>{el}</label>\r\n                            </span>\r\n                        ))}\r\n                    <span>\r\n                        {\r\n                            Types.length ? Types.length : '0'\r\n                        }\r\n                        /2\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n","export const Validate = (data) => {\r\n    let errors = {};\r\n    let reg = /^\\d+$/;\r\n    if (!data.name) {\r\n        errors.name = 'Name is required';\r\n    }\r\n    if (!data.hp || data.hp.search(reg) === -1) {\r\n        errors.hp = 'HP is required and it must be a number';\r\n    }\r\n    if (!data.attack || data.attack.search(reg) === -1) {\r\n        errors.attack = 'Attack is required and it must be a number';\r\n    }\r\n    if (!data.defense || data.defense.search(reg) === -1) {\r\n        errors.defense = 'Defense is required and it must be a number';\r\n    }\r\n    if (!data.speed || data.speed.search(reg) === -1) {\r\n        errors.speed = 'Speed is required and it must be a number';\r\n    }\r\n    if (!data.height || data.height.search(reg) === -1) {\r\n        errors.height = 'Height is required and it must be a number';\r\n    }\r\n    if (!data.weight || data.weight.search(reg) === -1) {\r\n        errors.weight = 'Weight is required and it must be a number';\r\n    }\r\n    if (data.type.length <= 0)\r\n        errors.type = 'A type is required';\r\n\r\n    return errors;\r\n};\r\n\r\nexport default Validate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { DEFAULT_IMAGE, FORMS } from '../../utils/constants';\r\nimport AddForm from './AddForm';\r\nimport './AddPokemon.css'\r\nimport { Validate } from '../../controllers/Validate';\r\nimport { connect } from 'react-redux';\r\nimport { createNewPokemon } from '../../actions';\r\n\r\nexport function AddPokemon({ pokemonsTypes, createNewPokemon }) {\r\n    const [Data, setData] = useState({\r\n        name: '',\r\n        hp: '',\r\n        attack: '',\r\n        defense: '',\r\n        speed: '',\r\n        height: '',\r\n        weight: '',\r\n        type: [],\r\n        image: DEFAULT_IMAGE,\r\n    });\r\n    const [Errors, setErrors] = useState({});\r\n    const [Types, setTypes] = useState([]);\r\n    const [Alert, setAlert] = useState({ errors: false, create: false });\r\n\r\n    useEffect(() => {\r\n        setErrors(Validate(Data));\r\n    }, [Data]);\r\n\r\n    useEffect(() => {\r\n        if (!Object.keys(Errors).length) {\r\n            setAlert({ ...Alert, errors: false });\r\n        }\r\n    }, [Errors]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...Data, type: Types });\r\n    }, [Types]);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (Object.keys(Errors).length) {\r\n            setAlert({ ...Alert, errors: true });\r\n        } else {\r\n            try {\r\n                await createNewPokemon(Data);\r\n                setAlert({ ...Alert, create: true });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setData({ ...Data, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleTypes = (e) => {\r\n        if(Types.length < 2) {\r\n            if(!Types.includes(e.target.value)) {\r\n                setTypes([...Types, e.target.value])\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='form'>\r\n            <AddForm\r\n                forms={FORMS}\r\n                handleSubmit={handleSubmit}\r\n                handleChange={handleChange}\r\n                handleTypes={handleTypes}\r\n                pokemonsTypes={pokemonsTypes}\r\n                Types={Types}\r\n                Errors={Errors}\r\n                Alert={Alert}\r\n                image={Data.image}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemonsTypes: state.pokemonsTypes,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createNewPokemon: (data) => dispatch(createNewPokemon(data)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPokemon);\r\n\r\n","import React, { useState } from 'react'\r\nimport './NavBar.css'\r\nimport { POKEBALL_IMAGE, SEARCH_ICON } from '../../utils/constants'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { searchPokemon, setLoading } from '../../actions';\r\n\r\nexport function Navbar({ searchPokemon, setLoading }) {\r\n    const [name, setName] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading('search');\r\n        searchPokemon(name)\r\n        setName('')\r\n    }\r\n\r\n    return (\r\n        <div className='NavBar'>\r\n            <div className='searchBar'>\r\n                <NavLink className='addButton' to='/'>\r\n                    <img alt='loading' className='logo' src={POKEBALL_IMAGE}></img>\r\n                    EXIT\r\n                </NavLink>\r\n                <NavLink className='addButton' to='/home'>\r\n                    <img alt='loading' className='logo' src={POKEBALL_IMAGE}></img>\r\n                    HOME\r\n                </NavLink>\r\n                <NavLink className='addButton' to='/home/add'>\r\n                    <img alt='loading' className='logo' src={POKEBALL_IMAGE}></img>\r\n                    CREATE\r\n                </NavLink>\r\n            </div>\r\n            <form onSubmit={(e) => handleSubmit(e)} className='searchBar'>\r\n                <span>SEARCH</span>\r\n                <input\r\n                    value={name}\r\n                    type='text'\r\n                    onChange={e => handleChange(e)}\r\n                    placeholder='Pokemon...'\r\n                ></input>\r\n                <button className='btnSubmit' type='submit'>\r\n                    <img alt='loading' className='searchIcon' src={SEARCH_ICON}></img>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        searchPokemon: (name) => dispatch(searchPokemon(name)),\r\n        setLoading: (state) => dispatch(setLoading(state))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Navbar);\r\n","import axios from 'axios';\r\nimport { POKEMON_URL } from '../utils/constants'\r\n\r\nexport const getPokemonDetail = async (id) => {\r\n    const detail = await axios.get(`${POKEMON_URL}/${id}`);\r\n    return detail;\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { getPokemonDetail } from '../../controllers/Pokemons'\r\nimport './Detail.css';\r\nimport Loading from '../Loading/Loading';\r\n\r\nexport default function Detail(props) {\r\n    const [detail, setDetail] = useState();\r\n    const id = props.match.params.id;\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const detail = await getPokemonDetail(id)\r\n            setDetail(detail.data[0])\r\n        })()\r\n    }, [id])\r\n\r\n    return (\r\n        <div className='container'>\r\n            {\r\n                detail ? (\r\n                    <div className='pokemon-card'>\r\n                        <div className={`pokemon-book unset ${detail.Types.map(type => { return type.name }).join(\" \")}`}>\r\n                            <div className={`card-header Tunset ${detail.Types.map(type => { return \"T\" + type.name }).join(\" \")}`}>\r\n                                <h1>{detail.name}</h1>\r\n                                <img alt='loading' className='pokemon-image' src={detail.image}></img>\r\n                                <p className='pokemon-id'>{`Pokemon ID: ${detail.id}`}</p>\r\n                            </div>\r\n                            <div className='card-content'>\r\n                                <p>{`💪 Attack: ${detail.attack}`}</p>\r\n                                <p>{`🛡️ Defense: ${detail.defense}`}</p>\r\n                                <p>{`❤️ HP: ${detail.hp}`}</p>\r\n                                <p>{`💨 Speed: ${detail.speed}`}</p>\r\n                                <p>{`📏 Height: ${detail.height}`}</p>\r\n                                <p>{`⚖️ Weight: ${detail.weight}`}</p>\r\n                                <p>{`🔥 Types: `}\r\n                                    {\r\n                                        detail.Types && detail.Types.map((type, index) => (\r\n                                            <span className='type' key={index}>{type.name}</span>\r\n                                        ))\r\n                                    }\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (<Loading />)\r\n            }\r\n        </div >\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { filterPokemons, reloadPokemons } from '../../actions';\r\nimport { FILTER_VALUES, SORT_VALUES, MODE_VALUES, POKEMON_LOGO } from '../../utils/constants'\r\nimport './Filter.css'\r\n\r\nexport function Filter({ reloadPokemons, filterPokemons, loading, pokemonsTypes }) {\r\n    const [types, setTypes] = useState({\r\n        type: 'ALL',\r\n        dataType: 'ALL',\r\n        sort: 'DEFAULT',\r\n        mode: 'DEFAULT'\r\n    });\r\n\r\n    const handleTypes = (e, data) => {\r\n        setTypes({\r\n            ...types,\r\n            [data]: e.target.value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='first-bar'>\r\n            <img className='pokemon-logo' src={POKEMON_LOGO}></img>\r\n            <div className='second-bar'>\r\n                {/* FILTER */}\r\n                <div className={loading.search || loading.pokemons ? 'filters hidden' : 'filters'}>\r\n                    <span>SELECT</span>\r\n                    <select onChange={(e) => handleTypes(e, 'type')}>\r\n                        <option value={'ALL'}>\r\n                            {'ALL'}\r\n                        </option>\r\n                        {pokemonsTypes && pokemonsTypes.map((type, i) => (\r\n                            <option key={i} value={type.name}>\r\n                                {type.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <span>FROM</span>\r\n                    <select onChange={(e) => handleTypes(e, 'dataType')}>\r\n                        {FILTER_VALUES && FILTER_VALUES.map((type, i) => (\r\n                            <option key={i} value={type}>\r\n                                {type}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <span>ORDER BY</span>\r\n                    <select onChange={(e) => handleTypes(e, 'sort')}>\r\n                        {SORT_VALUES && SORT_VALUES.map((s, i) => (\r\n                            <option key={i} value={s}>\r\n                                {s}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <select onChange={(e) => handleTypes(e, 'mode')}>\r\n                        {MODE_VALUES && MODE_VALUES.map((m, i) => (\r\n                            <option key={i} value={m}>\r\n                                {m}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <button\r\n                        className='btn-second'\r\n                        onClick={() => filterPokemons(types)}\r\n                    >FILTER</button>\r\n                    {/* RELOAD BUTTON */}\r\n                    <button\r\n                        className='btn-second not-hidden'\r\n                        onClick={() => reloadPokemons()}\r\n                    >RELOAD POKEMONS</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStatetoProps(state) {\r\n    return {\r\n        actualPage: state.actualPage,\r\n        pokemonsViews: state.pokemonsViews,\r\n        pokemonsTypes: state.pokemonsTypes,\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        reloadPokemons: () => dispatch(reloadPokemons()),\r\n        filterPokemons: (type) => dispatch(filterPokemons(type))\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Filter);","import './App.css';\r\nimport React from 'react';\r\nimport { Route } from 'react-router-dom'\r\nimport LandingPage from './components/LandingPage/LandingPage';\r\nimport Home from './components/Home/Home';\r\nimport Paginate from './components/Paginate/Paginate';\r\nimport AddPokemon from './components/AddPokemon/AddPokemon';\r\nimport Navbar from './components/NavBar/Navbar';\r\nimport Detail from './components/Detail/Detail';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nfunction App() {\r\n  return (\r\n    <React.Fragment>\r\n      <Route exact path=\"/\" component={LandingPage} />\r\n      <Route path=\"/home\" component={Navbar} />\r\n      <Route exact path=\"/home\" component={Filter} />\r\n      <Route exact path=\"/home\" component={Home} />\r\n      <Route exact path=\"/home\" component={Paginate} />\r\n      <Route path=\"/home/add\" component={AddPokemon} />\r\n      <Route path=\"/home/pokemon/:id\" component={Detail} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const defaultTypes = {\r\n    type: 'ALL',\r\n    dataType: 'ALL',\r\n    sort: 'DEFAULT',\r\n    mode: 'DEFAULT',\r\n}\r\n\r\nexport default function setViews(pokemons, types = defaultTypes) {\r\n    const views = [];\r\n    let view = [];\r\n    const regExp = /^[A-F\\d]{8}-[A-F\\d]{4}-4[A-F\\d]{3}-[89AB][A-F\\d]{3}-[A-F\\d]{12}$/i;\r\n\r\n    let array = [];\r\n    for (let i = 0; i < pokemons.length; i++) {\r\n        array.push(pokemons[i]);\r\n    }\r\n    // let array = pokemons;\r\n    const type = types.type;\r\n    const dataType = types.dataType;\r\n    const sort = types.sort;\r\n    const mode = types.mode;\r\n\r\n    if (type !== 'ALL') {\r\n        array = pokemons.filter(pokemon => {\r\n            let check = false;\r\n            pokemon.Types.forEach(pokeType => {\r\n                if (pokeType.name === type) check = true;\r\n            })\r\n            if (check) return pokemon\r\n        })\r\n    }\r\n\r\n    if (dataType !== 'ALL') {\r\n        const APP = [];\r\n        const API = [];\r\n\r\n        array.forEach(poke => {\r\n            if (regExp.test(poke.id)) {\r\n                APP.push(poke);\r\n            } else {\r\n                API.push(poke);\r\n            }\r\n        })\r\n        if (dataType === 'API') array = API;\r\n        if (dataType === 'APP') array = APP;\r\n    }\r\n\r\n    const sortedArray = sortArray(array, sort, mode);\r\n\r\n    const amount = sortedArray.length\r\n\r\n    for (let i = 0; i < amount; i++) {\r\n        view.push(sortedArray[i]);\r\n        if (view.length === 12 || i === amount - 1) {\r\n            views.push(view);\r\n            view = []\r\n        };\r\n    }\r\n\r\n    return views;\r\n}\r\n\r\n\r\n\r\nconst sortArray = (array, sort, mode) => {\r\n    if (sort === 'NAME' || sort === 'ATTACK') {\r\n        let compare = 'attack'\r\n        let model = [-1, 1];\r\n        if (sort === 'NAME') {\r\n            compare = 'name'\r\n        }\r\n        if (mode === 'DESCENDENT') {\r\n            model = [1, -1]\r\n        }\r\n        const sortedArray = array.sort((a, b) => {\r\n            if (a[compare] < b[compare]) return model[0];\r\n            if (a[compare] > b[compare]) return model[1];\r\n            return 0;\r\n        })\r\n        return sortedArray;\r\n\r\n    } else {\r\n        return array;\r\n    }\r\n}","import { GET_POKEMONS, CHANGE_PAGE, SET_POKEMONS_TYPES, CREATE_NEW_POKEMON, SEARCH_POKEMON, SET_LOADING, RELOAD_POKEMONS, FILTER_POKEMONS, ERROR } from '../actions'\r\nimport setViews from '../controllers/Views';\r\n\r\nconst initialState = {\r\n    pokemonsViews: [],\r\n    pokemonsTypes: [],\r\n    pokemonsLoaded: [],\r\n    searchView: [],\r\n    searchName: '',\r\n    loading: {\r\n        types: true,\r\n        pokemons: true,\r\n        search: false,\r\n        error: false,\r\n    },\r\n    actualPage: false,\r\n    pokemonDetail: {}\r\n}\r\n\r\nconst reducer = (state = initialState, { payload, type }) => {\r\n    switch (type) {\r\n        case GET_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemonsLoaded: payload,\r\n                pokemonsViews: setViews(payload),\r\n                loading: {\r\n                    ...state.loading,\r\n                    pokemons: false,\r\n                    search: false\r\n                },\r\n                actualPage: 0,\r\n                error: false\r\n            };\r\n        case CHANGE_PAGE:\r\n            return {\r\n                ...state,\r\n                actualPage: payload\r\n            }\r\n        case SET_POKEMONS_TYPES:\r\n            return {\r\n                ...state,\r\n                pokemonsTypes: payload,\r\n                loading: {\r\n                    ...state.loading,\r\n                    types: false\r\n                }\r\n            }\r\n        case CREATE_NEW_POKEMON:\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    pokemons: true\r\n                }\r\n            }\r\n        case SEARCH_POKEMON:\r\n            return {\r\n                ...state,\r\n                searchView: payload,\r\n                loading: {\r\n                    ...state.loading,\r\n                    error: false,\r\n                },\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                searchView: [],\r\n                loading: {\r\n                    ...state.loading,\r\n                    [payload]: true\r\n                },\r\n            }\r\n        case RELOAD_POKEMONS:\r\n            return {\r\n                ...state,\r\n                pokemonsViews: setViews(state.pokemonsLoaded),\r\n                searchView: [],\r\n                loading: {\r\n                    ...state.loading,\r\n                    search: false,\r\n                    error: false\r\n                },\r\n            }\r\n        case FILTER_POKEMONS:\r\n            const filteredViews = setViews(state.pokemonsLoaded, payload);\r\n            if (filteredViews.length > 0) {\r\n                return {\r\n                    ...state,\r\n                    pokemonsViews: filteredViews,\r\n                    loading: {\r\n                        ...state.loading,\r\n                        error: false,\r\n                        pokemons: false\r\n                    },\r\n                    actualPage: 0\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    pokemonsViews: [],\r\n                    loading: {\r\n                        ...state.loading,\r\n                        pokemons: false,\r\n                        error: 'no pokemons of that type were found'\r\n                    }\r\n                }\r\n            }\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                loading: {\r\n                    ...state.loading,\r\n                    error: payload\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}